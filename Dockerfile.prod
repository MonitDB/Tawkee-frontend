# Dockerfile.prod

# Estágio de Build
FROM node:lts-alpine as builder

WORKDIR /app

# Copie o package.json e o package-lock.json (ou yarn.lock)
COPY package.json ./
# Se você usar yarn, descomente a linha abaixo e comente a de cima
# COPY package.json yarn.lock ./

# Instale as dependências
RUN npm install
# Se você usar yarn, descomente a linha abaixo e comente a de cima
# RUN yarn install

# Copie o restante dos arquivos do projeto
COPY . .

# Crie o build de produção
# O comando build está definido no seu package.json ("tsc -b && vite build")
RUN npm run build

# Estágio de Produção
FROM nginx:stable-alpine

# Copie os arquivos de build do estágio anterior para o diretório padrão do Nginx
COPY --from=builder /app/dist /usr/share/nginx/html

# (Opcional mas recomendado) Copie uma configuração personalizada do Nginx, se necessário.
# Por enquanto, usaremos a configuração padrão do Nginx que serve arquivos estáticos de /usr/share/nginx/html.
# Se você criar um nginx.conf personalizado, descomente a linha abaixo:
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Exponha a porta 80 (porta padrão do Nginx)
EXPOSE 80

# Comando para iniciar o Nginx
CMD ["nginx", "-g", "daemon off;"]
